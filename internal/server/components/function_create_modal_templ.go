// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.819
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/sirrobot01/lamba/internal/executor"

func CreateFunctionModal(ex *executor.Executor) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center\" id=\"createFunctionModal\"><div class=\"bg-white p-6 rounded-lg w-[600px]\"><div class=\"flex justify-between items-center mb-4\"><h2 class=\"text-xl font-semibold\">Create function</h2><button class=\"text-gray-500 hover:text-gray-700\" onclick=\"closeModal();\">âœ•</button></div><form hx-post=\"/functions\" hx-trigger=\"submit\" onsubmit=\"reloadPage();\" hx-encoding=\"multipart/form-data\" hx-target=\"#function-list\" hx-swap=\"outerHTML\" hx-on::after-request=\"closeModal()\"><div class=\"space-y-4\"><div><label class=\"block text-sm font-medium text-gray-700\">Name <input type=\"text\" name=\"name\" required class=\"mt-1 mt-1 block w-full rounded-md border-0 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6 px-4 py-2\"></label></div><div><label class=\"block text-sm font-medium text-gray-700\">Handler <input type=\"text\" name=\"handler\" required class=\"mt-1 mt-1 block w-full rounded-md border-0 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6 px-4 py-2\"></label></div><div><label class=\"block text-sm font-medium text-gray-700\">Runtime <select name=\"runtime\" class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 px-4 py-2  rounded\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, runtime := range ex.RuntimeManager.List() {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<option value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 string
			templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(runtime)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/server/components/function_create_modal.templ`, Line: 57, Col: 32}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(runtime)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/server/components/function_create_modal.templ`, Line: 57, Col: 44}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</option>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</select></label></div><div><label class=\"block text-sm font-medium text-gray-700\">Function Code</label><div id=\"dropZone\" class=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\"><div id=\"uploadPrompt\" class=\"space-y-1 text-center\"><svg class=\"mx-auto h-12 w-12 text-gray-400\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\" aria-hidden=\"true\"><path d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg><div class=\"flex text-sm text-gray-600\"><label for=\"file-upload\" class=\"relative cursor-pointer bg-white rounded-md font-medium text-blue-600 hover:text-blue-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-blue-500\"><span>Upload a file</span> <input id=\"file-upload\" name=\"file\" type=\"file\" accept=\".zip\" class=\"sr-only\"></label></div><p class=\"text-xs text-gray-500\">ZIP up to 10MB</p></div><div id=\"fileUploaded\" class=\"hidden space-y-1 text-center\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"mx-auto h-12 w-12 text-green-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg><div class=\"text-sm text-gray-900\"><span id=\"fileName\" class=\"font-medium\"></span></div><button type=\"button\" onclick=\"resetFileUpload();\" class=\"text-sm text-red-600 hover:text-red-800\">Remove file</button></div></div></div><div><label class=\"block text-sm font-medium text-gray-700\">Memory (MB) <select name=\"memory\" class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 px-4 py-2  rounded\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for memStr, _ := range ex.MemoryManager.List() {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<option value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(memStr)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/server/components/function_create_modal.templ`, Line: 113, Col: 37}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if memStr == ex.MemoryManager.Default {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, " selected")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, ">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(memStr)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/server/components/function_create_modal.templ`, Line: 113, Col: 95}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "</option>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "</select></label></div><div><label class=\"block text-sm font-medium text-gray-700\">Timeout (seconds) <select name=\"timeout\" class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 px-4 py-2  rounded\"><option value=\"3\">3</option> <option value=\"10\" selected>10</option> <option value=\"30\">30</option> <option value=\"60\">60</option> <option value=\"300\">300</option> <option value=\"900\">900</option></select></label></div></div><div class=\"mt-6 flex justify-end space-x-3\"><button type=\"button\" onclick=\"closeModal();\" class=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50\">Cancel</button> <button type=\"submit\" class=\"px-4 py-2 text-sm font-medium text-white bg-orange-500 rounded-md hover:bg-orange-600\">Create</button></div></form></div></div><script>\n        function closeModal() {\n            document.getElementById('createFunctionModal').style.display = 'none';\n            resetFileUpload();\n        }\n        \n        function resetFileUpload() {\n            document.getElementById('file-upload').value = '';\n            document.getElementById('uploadPrompt').classList.remove('hidden');\n            document.getElementById('fileUploaded').classList.add('hidden');\n            document.getElementById('dropZone').classList.remove('bg-gray-50');\n        }\n        \n        function showUploadedFile(fileName) {\n            document.getElementById('uploadPrompt').classList.add('hidden');\n            document.getElementById('fileUploaded').classList.remove('hidden');\n            document.getElementById('fileName').textContent = fileName;\n            document.getElementById('dropZone').classList.add('bg-gray-50');\n        }\n\n        function showCreateModal() {\n            document.getElementById('createFunctionModal').style.display = 'flex';\n        }\n        function reloadPage() {\n            setTimeout(function() {\n                window.location.reload();\n            }, 2000);\n        }\n        document.getElementById('file-upload').addEventListener('change', function(e) {\n            const file = e.target.files[0];\n            if (file) {\n                if (file.size > 10 * 1024 * 1024) {\n                    alert('File size must be less than 10MB');\n                    resetFileUpload();\n                    return;\n                }\n                \n                if (!file.name.toLowerCase().endsWith('.zip')) {\n                    alert('Only ZIP files are allowed');\n                    resetFileUpload();\n                    return;\n                }\n\n                showUploadedFile(file.name);\n            }\n        });\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
